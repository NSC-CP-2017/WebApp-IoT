<% include header.ejs %>

<div class="container">
    <div class="section">
        <h3 class="header orange-text text-darken-2"><%=result.name%></h3>

        <div class="row">
            <form method="post">
                <div class="col m6 s12">

                    <ul class="collapsible" data-collapsible="accordion">
                        <li>
                            <div class="collapsible-header active"><i class="material-icons">library_books</i> Project Detail</div>
                            <div class="collapsible-body" style="padding:15px;">
                                <div class="input-field col m6"><input value="<%=result.name%>" id="p1" type="text" required class="validate truncate" name="name"><label class="active" for="p1">Project Name</label></div>
                                <div class="input-field col m6"><input value="<%=result.appID%>" id="p2" type="text" readonly class="validate truncate"><label class="active" for="p2">Project ID</label></div>
                                <div class="input-field col m6"><input value="<%=result.appKey%>" id="p3" type="text" readonly class="validate truncate"><label class="active" for="p3">Project Key</label></div>
                                <div class="input-field col m6"><input value="<%=result.appSecret%>" id="p4" type="text" readonly class="validate truncate"><label class="active" for="p4">Project Secret</label></div>
                                <div class="input-field col s12"><textarea id="p5" name="desc" class="materialize-textarea"><%=result.desc%></textarea><label for="p5">Description</label></div>
                                <div class="input-field col s12"><button class="waves-effect waves-light btn orange right" type="submit"><i class="material-icons left">note_add</i> Update Detail</button></div>
                                <div class="clearfix"></div>
                            </div>
                        </li>
                    </ul>

                </div>

                <div class="col m6 s12">
                    <ul class="collapsible" data-collapsible="accordion">
                        <li>
                            <div class="collapsible-header active"><i class="material-icons">input</i> Data Slots</div>
                            <div class="collapsible-body" style="padding:15px;">
                                <div id="dataSlots">
                                    <% for(var i=1; i<=result.devices.length; i++) { if (result.devices[i-1]) { %>
                                    <div class="input-field col s6 slotList">
                                        <input id="slot-<%=i%>" type="text" name="dev" pattern="[a-zA-Z0-9]+" required class="validate" value="<%=result.devices[i-1]%>">
                                        <label for="slot-<%=i%>">Data Slot <%=i%></label>
                                    </div>
                                    <% } } %>
                                </div>
                                <div class="input-field col s12">
                                    <button class="add-slot-btn waves-effect waves-light btn btn-floating blue" type="button"><i class="material-icons">add</i></button>
                                    <button class="waves-effect waves-light btn orange right" type="submit"><i class="material-icons left">note_add</i> Update Slots</button>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                        </li>
                    </ul>			
                </div>
            </form>
        </div>
        <div class="row">

            <% for(var i=1; i<=result.devices.length; i++) { if (result.devices[i-1]) { %>
            <div class="col m6 s12">
                <ul class="collapsible" data-collapsible="accordion">
                    <li>
                        <div class="collapsible-header active"><i class="material-icons">library_books</i> Data Slot <%=i%> - <%=result.devices[i-1]%></div>
                        <div class="collapsible-body" style="padding:15px; overflow:hidden;">
                            <canvas id="graph<%=i%>" width="560" height="320"></canvas>
                        </div>
                    </li>
                </ul>			
            </div>
            <% } } %>
            <style>
                canvas{
                    width: 100% !important;
                    max-width: 560px;
                    height: auto !important;
                }
            </style>
            <script src="http://iot-chula.com/js/iot-chula.js"></script>
            <script src="http://iot-chula.com/js/Chart.js"></script>
            <script>
                var APPID = '<%=result.appID%>';
                var APPKEY = '<%=result.appKey%>';
                var APPSECRET = '<%=result.appSecret%>';

                var slots = [<% if(result.devices.length) { %> '<%-result.devices.join("','") %>'<% } %>];
                var graph = [], Charts = [], data = [];
                for(var x in slots){
                    data[x] = {
                        labels : ['','','','','','','','','','','','','','','','','','','','','','','',''],
                        datasets : [{
                            fillColor : "rgba(111, 182, 253, 0.4)",
                            strokeColor : "#256ca8",
                            pointColor : "#fff",
                            pointStrokeColor : "#14507c",
                            data : [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
                        }]
                    };
                    graph[x] = document.getElementById("graph"+(parseInt(x)+1)).getContext("2d");
                    Charts[x] = new Chart(graph[x]).Line(data[x]);

                }
                <% for(var i=0; i<result.devices.length; i++) { %>
                $.get("http://iot-chula.com/dynamo24?pid="+APPID+"/"+slots[<%=i%>],function(data){
                    for(var k = 0;k < data.length; k++) {
                        Charts[<%=i%>].datasets[0].points[23-k].value = Number(data[k]);
                    }
                    Charts[<%=i%>].update();
                });
                <% } %>

                // Create a client instance
                client = new Paho.MQTT.Client('iot-chula.com', 8081, "/", "SIoTP-"+APPKEY);

                // set callback handlers
                client.onConnectionLost = onConnectionLost;
                client.onMessageArrived = onMessageArrived;

                // connect the client
                client.connect({userName:APPKEY,password:APPSECRET,onSuccess:function() {
                    // Once a connection has been made, make a subscription and send a message.
                    console.log("onConnect");
                    for(var t in slots){
                        client.subscribe(APPID+"/"+slots[t]);	
                    }
                }});


                function onConnectionLost(responseObject) {
                    if (responseObject.errorCode !== 0) {
                        console.log("onConnectionLost:"+responseObject.errorMessage);
                    }
                    //window.location.reload();
                }

                function onMessageArrived(message) {
                    if(message.destinationName == '') { }
                    <% for(var i=0; i<result.devices.length; i++) {  %>
                    else if(message.destinationName == APPID+'/<%=result.devices[i]%>') {
                            Charts[<%=i%>].removeData();
                    return Charts[<%=i%>].addData([parseInt(message.payloadString)], "");
                } 
                <% } %>

                console.log("onMessageArrived:",message.payloadString);
                }
            </script>
        </div>
    </div>
</div>

<% include footer.ejs %>
