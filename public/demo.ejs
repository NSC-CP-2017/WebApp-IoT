<% include header.ejs %>
<div id="title-banner">
	<div class="container center">
		<h3 class="header light white-text">Example Projects</h3>
		<p id="breadcrumbs"><a href="/">Home</a> &raquo; Demo &amp; Example</p>
	</div>
</div>
<div class="container">
	<div class="section">
		<div class="row">
			<div class="col s12">
				<ul class="tabs">
					<li class="tab col s3"><a class="active" href="#demo1">Temperature Measurement</a></li>
					<li class="tab col s3"><a href="#demo2">Motion Detector</a></li>
					<li class="tab col s3"><a href="#demo3">Chat Room</a></li>
					<li class="tab col s3"><a href="#demo4">Other</a></li>
				</ul>
			</div>
	<div id="demo1" class="col s12">
		<h4>Temperature Measurement</h4>
		<p>โครงการนี้ เป็นการสร้างอุปกรณ์วัดอุณหภูมิ โดยใช้ Temperature module ที่มีอยู่ใน Real Time Clock DS3231 แล้วส่งค่าเข้าไปยัง Arduino UNO เพื่อส่งค่าอุณหภูมิผ่าน One Click IoT เข้าสู่ iot-chula.com โดยใช้ ESP8266-01 เป็น wifi module</p>
		<h5>อุปกรณ์</h5>
		<ul style="list-style-type:disc">
			<li>Arduino UNO</li>
			<img class="activator" src="assets/images/demo_temp/uno.jpg" style="width:128px;height:128px;">
			<li>ESP8266-01</li>
			<img class="activator" src="assets/images/demo_temp/esp.jpg" style="width:128px;height:128px;">
			<li>Real Time Clock DS3231</li>
			<img class="activator" src="assets/images/demo_temp/rtc.jpg" style="width:128px;height:128px;">
			<li>UART</li>
			<img class="activator" src="assets/images/demo_temp/uart.jpg" style="width:128px;height:128px;">
		</ul>
		<h5>วิธีทำ</h5>
		<ol>
			<li>ต่อ Arduino UNO Board เข้ากับ Computer แล้ว ทำการ Program ผ่าน Arduino IDE ด้วย Code ดังนี้ </li>
			<blockquote>
    		<code>
					<pre>
// Date, Time and Alarm functions using a DS3231 RTC connected via I2C and Wire lib

#include "Wire.h"
#include "SPI.h"  // not used here, but needed to prevent a RTClib compile error
#include "RTClib.h"

RTC_DS3231 RTC;

void setup () {
  Serial.begin(9600);
  Wire.begin();
  RTC.begin();
}

void loop () {
  int i = RTC.getTemperature();
  Serial.print(i); // print temperature
  Serial.print(".");
  delay(1000);
}
					</pre>
				</code>
  		</blockquote>
			<li>Program ESP8266-01 โดยต่อผ่าน UART ตามรูปและ Code ด้านล่างโดยขณะ Program ให้นำขา GPIO0 ต่อลง Ground</li>
			<img class="activator" src="assets/images/demo_temp/uart-esp.jpg">
			<blockquote>
				<code>
					<pre>
#include &lt;ESP8266WiFi.h&gt;
#include "IoTChula.h"

//=================== Edit this part only ==========================

const char* ssid      = &lt;WIFI_SSID&gt;;
const char* password  = &lt;WIFI_PASSWORD&GT;;
char* projectKey    = &lt;PROJECT_KEY&GT;;
char* projectSecret = &lt;PROJECT_SECRET&GT;;
char* projectID     = &lt;PROJECT_ID&GT;;
char* deviceID      = &lt;DEVICE_ID&GT;;
char* channel       = "";

//==================================================================

WiFiClient espClient;
IoTChula client(espClient);
long lastMsg = 0;
char msg[50];
int value = 0;

void setup() {
  pinMode(BUILTIN_LED, OUTPUT);
  Serial.begin(9600);

  //channel = "projectID/deviceID"
  strcat(channel,projectID);
  strcat(channel,"/");
  strcat(channel,deviceID);

  // connected to the internet
  setup_wifi();
}

void setup_wifi() {
  delay(10);
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Attempt to connect
    if (client.connect(deviceID,projectKey,projectSecret)) {
      Serial.println("connected");
      // Once connected, publish an announcement...

      client.publish(channel, "I'm back");
      // ... and resubscribe
      client.subscribe("10018/b");
    } else {
      Serial.println("failed, try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

int i = 0;
void loop() {
  if (!client.connected()) {  reconnect();  }
  client.loop();
  if (Serial.available() > 0) {
    value = Serial.read();
    if(value == 46){
      msg[i] = 0;
    Serial.print("Publish message: ");
    Serial.println(msg);
    client.publish(channel, msg);
    i = 0;
    } else if(i<49) {
      Serial.print(i);
      Serial.print(" ");
      Serial.println(value);
      msg[i++] = value;
    }
  }
}
					</pre>
				</code>
			</blockquote>
			<li>เชื่อมต่อ RTC เข้ากับ UNO ดังรูป</li>
			<img class="activator" src="assets/images/demo_temp/uno-rtc.jpg">
			<li>เชื่อมต่อ ESP เข้ากับ UNO โดยให้เชื่อมต่อกันดังนี้</li>
				<ul>
					<li>ESP--------UNO</li>
					<li>VCC--------5V(หรือ3.3V ก็ได้)</li>
					<li>GND--------GND</li>
					<li>TXD--------RX</li>
					<li>RXD--------TX</li>
					<li>CH_PD------5V(หรือ3.3V ก็ได้)</li>

				</ul>
		</ol>
	</div>
	<div id="demo2" class="col s12">
		<h4>Motion Detector</h4>
		<p>Project นี้เป็น demo ที่แสดงการส่งข้อมูลแกน x,y ที่วัดได้จากอุปกรณ์มือถือ ผ่าน secure web socket เข้าสู่ One Click IoT</p>
		<h5>อุปกรณ์</h5>
		<ul style="list-style-type:disc">
			<li>โทรศัพท์มือถือ ที่มี gyroscope sensor, เชื่อมต่อ internet และเปิด website ได้</li>
			<li><i class="large material-icons">phone_iphone</i></li>
		</ul>
		<h5>วิธีทำ</h5>
		<ol>
			<li>สร้าง Project จาก iot-chula.com ให้เรียบร้อย</li>
			<li>สร้าง HTML file โดย code ดังนี้ โดยแก้ code ในส่วน</li>
			<blockquote>
    		<code>
					<pre>
&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/&gt;
        &lt;meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=no"/&gt;
        &lt;title&gt;MyMotion - IoT-Chula.com&lt;/title&gt;
        &lt;style&gt;td { text-align: center; }&lt;/style&gt;
        &lt;script src="https://demo.iot-chula.com/my-motion/iot-chula.js" type="text/javascript"&gt;&lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;style&gt;
            label { width:40%; display:inline-block; text-align:left; }
            p { margin:0 0 5px; }
        &lt;/style&gt;
        &lt;div class="setting" id="setNew" style="text-align:center"&gt;
            &lt;form method="get"&gt;
                &lt;p&gt;&lt;label&gt;ค่า แกน X : &lt;/label&gt;&lt;input id="doTiltLR" /&gt;&lt;/p&gt;
                &lt;p&gt;&lt;label&gt;ค่า แกน Y : &lt;/label&gt;&lt;input id="doTiltFB" /&gt;&lt;/p&gt;
            &lt;/form&gt;

        &lt;/div&gt;

        &lt;div class="container" style="perspective: 300;"&gt;
            &lt;img src="https://demo.iot-chula.com/my-motion/NSC_Logo.png" onClick="toggleSend();" style="margin:20px auto 0; max-width:60vw; display:block" id="imgLogo" class="logo"&gt;
        &lt;/div&gt;
        &lt;p&gt;&lt;small id="sendStat"&gt; ไม่มีการส่งข้อมูล &lt;/small&gt;&lt;small id="lastSent"&gt; &lt;/small&gt;&lt;/p&gt;

        &lt;script type="text/javascript"&gt;

            var tiltLR, tiltFB, dir, message;
            var sendData = false;
            //================ONLY EDIT HERE==================

            var APPID = &lt;PROJECT_ID&gt;;
            var APPKEY = &lt;PROJECT_KEY&gt;;
            var APPSECRET = &lt;PROJECT_SECRET&gt;;
            var slotx = &lt;DATA_SLOT_1&gt;;
            var sloty = &lt;DATA_SLOT_2&gt;;

            //================================================
            start();

            function start(){
                if (window.DeviceOrientationEvent) {

                   //

                    var d = new Date();
                    var name = "mobile-"+d.getTime().toString(36);
                    var DEVICE_ID = name;

                    // Create a client instance
                    client = new Paho.MQTT.Client('iot-chula.com', 8083, "/", DEVICE_ID);

                    // set callback handlers
                    client.onConnectionLost = onConnectionLost;
                    client.onMessageDelivered = onMessageDelivered;

                    // connect the client
                    client.connect({onSuccess:onConnect,userName:APPKEY,useSSL:true,password:APPSECRET});

                } else {
                    alert('ขอโทษครับ :( อุปกรณ์ของคุณ ไม่รองรับการใช้งานแอพฯนี้');
                }
            }

            function toggleSend() {
                sendData = !sendData; document.getElementById("lastSent").innerHTML = ''; document.getElementById("sendStat").innerHTML = (sendData)?' ส่งข้อมูลล่าสุดเมื่อ ':' ไม่มีการส่งข้อมูล ';
            }

            function onConnect() {
                // Once a connection has been made, make a subscription and send a message.
                console.log("onConnect");

                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function(position) {
                        message = new Paho.MQTT.Message(position.coords.latitude+","+position.coords.longitude);
                        message.destinationName = "latlon";
                        client.send(message);
                    });
                }
                window.addEventListener('deviceorientation', function(eventData) {
                    tiltLR = Math.round(eventData.gamma);
                    tiltFB = Math.round(eventData.beta);
                    dir = Math.round(eventData.alpha);

                    document.getElementById("doTiltLR").value = tiltLR;
                    document.getElementById("doTiltFB").value = tiltFB;

                    // Apply the transform to the image
                    var logo = document.getElementById("imgLogo");
                    logo.style.webkitTransform = "rotate("+ tiltLR +"deg) rotate3d(1,0,0, "+ (tiltFB*-1)+"deg)";
                    logo.style.MozTransform = "rotate("+ tiltLR +"deg)";
                    logo.style.transform = "rotate("+ tiltLR +"deg) rotate3d(1,0,0, "+ (tiltFB*-1)+"deg)";
                }, false);

                var myVar2 = setInterval(function(){
                    if(!sendData) return;
                    if(tiltLR != null) {
                        message = new Paho.MQTT.Message(tiltLR+"");
                        message.destinationName = APPID+"/"+slotx;
                        client.send(message);
                    }
                    if(tiltFB != null) {
                        message = new Paho.MQTT.Message(tiltFB+"");
                        message.destinationName = APPID+"/"+sloty;
                        client.send(message);
                    }
                    var aaa = new Date().toISOString().replace("T","&lt;br /&gt;");
                    document.getElementById("lastSent").innerHTML = aaa;

                }, 250);
            }
            // called when the client loses its connection
            function onConnectionLost(responseObject) {
                if (responseObject.errorCode !== 0) {
                    var r = confirm("ขาดดการเชื่อมต่อกับเซิฟเวอร์ ต้องการเชื่อมต่อใหม่หรือไม่?");
                    if (r == true) {
                        window.location.reload();
                    } else {
                        console.log("onConnectionLost:"+responseObject.errorMessage);
                    }
                }
            }
            // called when a message arrives
            function onMessageDelivered(message) {

            }
        &lt;/script&gt;
        &lt;hr /&gt;
        &lt;div class="fb-like" data-share="true" data-width="450" data-show-faces="true"&gt;&lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
					</pre>
				</code>
			</blockquote>
			<li>เปิด html file ผ่านโทรศัพท์มือถือ แล้วส่งข้อมูลเข้าสู่ Project ได้เลย</li>
		</ol>
	</div>
	<div id="demo3" class="col s12">
		<h6>Try it at<a href="https://app.iot-chula.com/chat-room"> app.iot-chula.com/chat-room</a></h6>
		<p>Instruction is Coming Soon.</p>
	</div>
<div id="demo4" class="col s12"><p>Coming Soon.</p></div>
</div>

	</div>
</div>
<% include footer.ejs %>
