var http = require('http');
var weatherKey = require("../secrets/weatherKey");
var request = require('request');
var fs = require('fs');
var Weather = require('mongoose').model('weather');

exports.getWeatherFromCityID = function(req, res){
  var local_city_id = req.query.city_id;
  var local_dt = req.query.dt;
  Weather.findOne({city_id : local_city_id, dt : local_dt}, function(err, weather){
      if(err){
        res.status(500).json({msg : "internal error"});
      }
      else if(!weather){
        res.status(404).json({msg : "weather not found"});
      }
      else{
        res.status(200).json(weather);
      }
  });
}

// sleep time expects milliseconds
function sleep (time) {
  return new Promise((resolve) => setTimeout(resolve, time));
}
var fetchOneID = function(cid){
  var url = 'http://api.openweathermap.org/data/2.5/forecast?id='+thaiCityIds[cid]+'&appid='+weatherKey.appid;
  http.get(url, (resp) => {
    let data = '';

    // A chunk of data has been recieved.
    resp.on('data', (chunk) => {
      data += chunk;
    });

    // The whole response has been received. Print out the result.
    resp.on('end', () => {
      data = JSON.parse(data);
      var promises = [];
      for(let i=0;i<data.list.length;i++){
        promises.push(new Promise(function(resolve, reject){
          let index = i;
          if(data.list[index].rain['3h'] == undefined){
            data.list[index].rain = {"3h" : 0};
          }
          var new_cid = thaiCityIds[cid].toString();
          var new_dt = data.list[index].dt.toString();
          var new_pos = {'type':'Point','coordinates':[data.city.coord.lon,data.city.coord.lat]}
          Weather.findOneAndUpdate({city_id : new_cid, dt : new_dt}, {$set : {
              city : data.city.name,
              city_id : data.city.id,
              pos : new_pos,
              dt : data.list[index].dt,
              temp : data.list[index].main.temp,
              humidity : data.list[index].main.humidity,
              weather : data.list[index].weather,
              rain : data.list[index].rain['3h'],
              wind : data.list[index].wind.speed
          }}, {new: true, upsert: true}, function(err, weather){
              if(err){
                var obj = {};
                obj.msg = "error";
                reject(obj);
              }
              else{
                resolve();
              }
          });
        }));
      }
      Promise.all(promises).catch(function(obj){
        return obj;
      }).then(function(){
        return {msg : "done"};
      });
    }).on("error", (err) => {
      console.log("Error: " + err.message +"\nFrom CID: "+cid);
    });
  });
}
exports.fetchWeather = function(req, res){
  if(req.cid == undefined || req.cid == null){
    req.cid = 0;
  }
  //==== this part is for testing =======
  thaiCityIds = testThaiCityIds;
  //==== end testing part ===============
  console.log("req.cid = "+req.cid);
  if(req.cid == thaiCityIds.length){
    res.status(201).json({msg : "done"});
    return ;
  }
  for(;req.cid < thaiCityIds.length && req.cid < req.cid+60;req.cid++){
    let rsp = fetchOneID(req.cid);
    if(rsp != undefined && rsp.hasOwnProperty('error')){
      res.status(500).json(rsp);
      return ;
    }
  }
  sleep(60000).then(function(){
    exports.fetchWeather(req, res);
  });
}

exports.testFetch = function(req, res){
  var url = 'http://api.openweathermap.org/data/2.5/forecast?id='+thaiCityIds[0]+'&appid='+weatherKey.appid;
  http.get(url, (resp) => {
  let data = '';

  // A chunk of data has been recieved.
  resp.on('data', (chunk) => {
    data += chunk;
  });

  // The whole response has been received. Print out the result.
  resp.on('end', () => {
    console.log(JSON.parse(data));
    res.status(200).json({msg : "done"});
  });

}).on("error", (err) => {
  console.log("Error: " + err.message);
});
};


var testThaiCityIds = [1607257,1609031,1608525];

var thaiCityIds
